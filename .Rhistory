load("E:/UCM/MachineLearning/seleccion_variables.RData")
View(cruzadaavnnetbin)
View(cruzadaavnnetbin)
View(cruzadaavnnetbin)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
View(union1)
control.rf
control.lr
predictors(salida.rfe.rf)
salida.rfe.lr
salida.rfe.rf
medias.base.lr<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"TechSupport.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.rf<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"tenure.18+"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
setwd("E:/UCM/MachineLearning")
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
medias.base.lr<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"TechSupport.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.rf<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"tenure.18+"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.rf<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"tenure.18+"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.rf<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No", "tenure.18+"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.rf<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No",
"tenure.18"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
union1<-rbind(medias.base.lr, medias.base.rf, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
medias.base.lr.df <- data.frame(medias.base.lr[1])
medias.base.lr.df$modelo="RFE LR TOP 5"
medias.base.rf.df <- data.frame(medias.base.rf[1])
medias.base.rf.df$modelo="RFE RF TOP 5"
union1<-rbind(medias.base.lr.df, medias.base.rf.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
for(modelo in c(medias.base.lr, medias.base.rf, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
for(modelo in c(medias.base.lr, medias.base.rf, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
salida.rfe.lr
control.lr <- rfeControl(functions = lrFuncs, method = "cv", number = 5, repeats = 15, seeds = vector.semillas)
salida.rfe.lr <- rfe(telco.data.final[, c(columnas, "tenure.cont")], telco.data.final[, vardep], sizes = c(1:20), rfeControl = control.rf)
predictors(salida.rfe.rf)
plot(salida.rfe.rf, type=c("g", "o"))
# Con random forest
control.rf <- rfeControl(functions = rfFuncs, method = "cv", number = 5, repeats = 15, seeds = vector.semillas)
salida.rfe.rf <- rfe(telco.data.final[, c(columnas, "tenure.cont")], telco.data.final[, vardep], sizes = c(1:20), rfeControl = control.rf)
predictors(salida.rfe.rf)
plot(salida.rfe.rf, type=c("g", "o"))
predictors(salida.rfe.rf)
View(telco.data.final)
cluster <- makeCluster(detectCores() - 1)
registerDoParallel(cluster)
control.lr <- rfeControl(functions = lrFuncs, method = "cv", number = 5, repeats = 15, seeds = vector.semillas)
salida.rfe.lr <- rfe(telco.data.final[, c(columnas, "tenure.cont")], telco.data.final[, vardep], sizes = c(1:20), rfeControl = control.rf)
predictors(salida.rfe.rf)
plot(salida.rfe.rf, type=c("g", "o"))
# Con random forest
control.rf <- rfeControl(functions = rfFuncs, method = "cv", number = 5, repeats = 15, seeds = vector.semillas)
salida.rfe.rf <- rfe(telco.data.final[, c(columnas, "tenure.cont")], telco.data.final[, vardep], sizes = c(1:20), rfeControl = control.rf)
predictors(salida.rfe.rf)
plot(salida.rfe.rf, type=c("g", "o"))
salida.rfe.lr
salida.rfe.rf
rm(medias.base.lr)
rm(medias.base.rf)
rm(medias.base.lr.df)
rm(medias.base.rf.df)
medias.base<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("tenure.cont", "TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "TechSupport.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base <- data.frame(medias.base.lr[1])
medias.base$modelo="RFE LR-RF TOP 5"
medias.base<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("tenure.cont", "TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "TechSupport.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.df <- data.frame(medias.base[1])
medias.base.df$modelo="RFE LR-RF TOP 5"
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
par(mai=c(3,1,1,1))
Vcramer<-function(v,target){
greybox::cramer(telco.data.final[, v], telco.data.final[, target])$value
}
# Gráfico con el V de cramer de todas las variables input para saber su importancia
graficoVcramer<-function(varsInd, varDep){
vector.cramer <- c(sapply(varsInd, function(x) {Vcramer(x, varDep)}))
barplot(sort(vector.cramer,decreasing =T),las=3,ylim=c(0,1), names.arg = varsInd, cex.names=0.8)
}
graficoVcramer(c("PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check",
"StreamingMovies.No", "OnlineSecurity.No", "TechSupport.No"), vardep)
# Diferencia entre ambos modelos
setdiff(predictors(salida.rfe.rf), candidato.bic)
setdiff(candidato.bic, predictors(salida.rfe.rf))
# ¿Y si eliminamos OnlineSecurity.No?
medias6<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check"),
listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias6.df <- data.frame(medias6[1])
medias6.df$modelo="LOGISTICA BIC SIN OnlineSecurity.No"
union1<-rbind(medias.base.lr.df, medias.base.rf.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias.base.lr, medias.base.rf, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
union1<-rbind(medias.base.df, medias.base.rf.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias.base.df, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
for(modelo in c(medias.base, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
graficoVcramer(c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No", "tenure.cont",
"TechSupport.No", "Contract.Month.to.month", "InternetService.DSL"), vardep)
medias5<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No", "tenure.cont",
"TechSupport.No", "Contract.Month.to.month"), listclass=, c(""), grupos=5,sinicio=1234,repe=15)
medias5.df <- data.frame(medias5[1])
medias5.df$modelo="LOGISTICA RFE CON tenure.cont"
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias.base, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
medias6<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check"),
listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias6.df <- data.frame(medias6[1])
medias6.df$modelo="LOGISTICA BIC SIN OnlineSecurity.No"
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias.base, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
View(tabla.aic)
View(telco.data.final)
rm(list=setdiff(ls(), c("telco.data.final")))
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
rm(tabla); rm(tabla.orden); rm(media); rm(desv.tipica); rm(factores); rm(mejor.lambda); rm(vector.mejor.lambda);
rm(columnas.dummy); rm(salida.woe); rm(salida.woe.copia); rm(tablamis.numericas); rm(tablamis.factores); rm(col);
rm(numericas)
cluster <- makeCluster(detectCores() - 1)
registerDoParallel(cluster)
# SELECCION DE VARIABLES
# Metodo 1. Stepwise AIC y BIC
columnas <- names(telco.data.final)[c(-37, -38)]
vardep <- c("target")
lista.variables.aic <- steprepetidobinaria(data=telco.data.final,
vardep=vardep,listconti=columnas,sinicio=12345,
sfinal=12445,porcen=0.8,criterio="AIC")
tabla.aic <- lista.variables.aic[[1]]
lista.variables.bic <- steprepetidobinaria(data=telco.data.final,
vardep=vardep,listconti=columnas,sinicio=12345,
sfinal=12445,porcen=0.8,criterio="BIC")
tabla.bic <- lista.variables.bic[[1]]
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
cluster <- makeCluster(detectCores() - 1)
registerDoParallel(cluster)
names(telco.data.final)
load("E:/UCM/MachineLearning/seleccion_variables.RData")
medias.base<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("tenure.cont", "TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "TechSupport.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias.base.df <- data.frame(medias.base[1])
medias.base.df$modelo="RFE LR-RF TOP 5"
medias1<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check",
"OnlineSecurity.No", "tenure.0.5", "TechSupport.No", "Dependents"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias1.df <- data.frame(medias1[1])
medias1.df$modelo="LOGISTICA AIC"
medias2<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check",
"OnlineSecurity.No"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias2.df <- data.frame(medias2[1])
medias2.df$modelo="LOGISTICA BIC"
# Diferencia entre ambos modelos
setdiff(predictors(salida.rfe.rf), candidato.bic)
setdiff(candidato.bic, predictors(salida.rfe.rf))
medias3<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No", "tenure.18", "tenure.0.5",
"TechSupport.No", "Contract.Month.to.month", "InternetService.DSL"), listclass=, c(""), grupos=5,sinicio=1234,repe=15)
medias3.df <- data.frame(medias3[1])
medias3.df$modelo="LOGISTICA RFE"
union1<-rbind(medias1.df,medias2.df,medias3.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
medias4<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check",
"OnlineSecurity.No", "tenure.cont", "TechSupport.No", "Dependents"), listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias4.df <- data.frame(medias4[1])
medias4.df$modelo="LOGISTICA AIC CON tenure.cont"
medias5<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic", "OnlineSecurity.No", "tenure.cont",
"TechSupport.No", "Contract.Month.to.month"), listclass=, c(""), grupos=5,sinicio=1234,repe=15)
medias5.df <- data.frame(medias5[1])
medias5.df$modelo="LOGISTICA RFE CON tenure.cont"
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
# Opcion 3. Grafico VCramer
# Calcula el V de Cramer
par(mai=c(3,1,1,1))
Vcramer<-function(v,target){
greybox::cramer(telco.data.final[, v], telco.data.final[, target])$value
}
# Gráfico con el V de cramer de todas las variables input para saber su importancia
graficoVcramer<-function(varsInd, varDep){
vector.cramer <- c(sapply(varsInd, function(x) {Vcramer(x, varDep)}))
barplot(sort(vector.cramer,decreasing =T),las=3,ylim=c(0,1), names.arg = varsInd, cex.names=0.8)
}
graficoVcramer(c("PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check",
"StreamingMovies.No", "OnlineSecurity.No", "TechSupport.No"), vardep)
# ¿Y si eliminamos OnlineSecurity.No?
medias6<-cruzadalogistica(data=telco.data.final, vardep="target",listconti=c("Contract.Month.to.month", "InternetService.Fiber.optic", "TotalCharges", "InternetService.DSL",
"StreamingMovies.No", "PaperlessBilling", "Contract.One.year", "StreamingTV.No", "PaymentMethod.Electronic.check"),
listclass=c(""), grupos=5,sinicio=1234,repe=15)
medias6.df <- data.frame(medias6[1])
medias6.df$modelo="LOGISTICA BIC SIN OnlineSecurity.No"
union1<-rbind(medias.base.df, medias1.df,medias2.df,medias3.df, medias4.df, medias5.df, medias6.df)
par(cex.axis=0.5)
boxplot(data=union1,tasa~modelo,main="TASA FALLOS", col = "#F28773", lwd = 1)
par(cex.axis=0.5)
boxplot(data=union1,auc~modelo,main="AUC", col = "#F28773", lwd = 1)
for(modelo in c(medias.base, medias1,medias2,medias3, medias4, medias5, medias6)) {
print(modelo$table)
}
save.image("E:/UCM/MachineLearning/seleccion_variables.RData")
# REDES NEURONALES
# 2 candidatos
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
variables.candidato.1 <- c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic",
"OnlineSecurity.No", "tenure.cont", "TechSupport.No", "Contract.Month.to.month")
variables.candidato.2 <- c("tenure.cont", "TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic",
"TechSupport.No")
vardep <- c("target")
load("E:/UCM/MachineLearning/seleccion_variables.RData")
rm(list=setdiff(ls(), c("telco.data.final")))
# REDES NEURONALES
# 2 candidatos
source("./librerias/funcion steprepetido binaria.R")
source("./librerias/cruzadas avnnet y log binaria.R")
library(parallel)
library(doParallel)
library(caret)
variables.candidato.1 <- c("TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic",
"OnlineSecurity.No", "tenure.cont", "TechSupport.No", "Contract.Month.to.month")
variables.candidato.2 <- c("tenure.cont", "TotalCharges", "MonthlyCharges", "InternetService.Fiber.optic",
"TechSupport.No")
vardep <- c("target")
View(cruzadaavnnetbin)
View(cruzadaavnnetbin)
vardep <- "target"
size.candidato.1 <- c(5, 10, 15, 20, 25, 30, 35, 40, 50)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
medias1<-cruzadaavnnetbin(data=saheartbis, vardep=vardep,listconti=variables.candidato.1,
listclass=c(""),grupos=5,sinicio=1234,repe=15, size=size.candidato.1,decay=decay.candidato.1,
repeticiones=15)
medias1$modelo="avnnet1"
size.candidato.2 <- c(5, 10, 15, 20, 25, 30, 35, 40, 50)
decay.candidato.2 <- c(0.1, 0.01, 0.001)
medias2<-cruzadaavnnetbin(data=saheartbis, vardep=vardep,listconti=variables.candidato.2,
listclass=c(""),grupos=5,sinicio=1234,repe=15, size=size.candidato.2,decay=decay.candidato.2,
repeticiones=15)
medias2$modelo="avnnet2"
size.candidato.1 <- c(5, 10, 15, 20, 25, 30, 35, 40, 50)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
medias1<-cruzadaavnnetbin(data=telco.data.final, vardep=vardep,listconti=variables.candidato.1,
listclass=c(""),grupos=5,sinicio=1234,repe=15, size=size.candidato.1,decay=decay.candidato.1,
repeticiones=15)
medias1$modelo="avnnet1"
size.candidato.2 <- c(5, 10, 15, 20, 25, 30, 35, 40, 50)
decay.candidato.2 <- c(0.1, 0.01, 0.001)
medias2<-cruzadaavnnetbin(data=telco.data.final, vardep=vardep,listconti=variables.candidato.2,
listclass=c(""),grupos=5,sinicio=1234,repe=15, size=size.candidato.2,decay=decay.candidato.2,
repeticiones=15)
medias2$modelo="avnnet2"
View(cruzadalogistica)
View(cruzadalogistica)
View(cruzadaavnnetbin)
save.image("E:/UCM/MachineLearning/redes_neuronales.RData")
load("E:/UCM/MachineLearning/seleccion_variables.RData")
load("E:/UCM/MachineLearning/seleccion_variables.RData")
View(medias1.df)
load("E:/UCM/MachineLearning/seleccion_variables.RData")
load("E:/UCM/MachineLearning/redes_neuronales.RData")
as.formula(paste(target, paste(variables.candidato.1, collapse = "+")))
as.formula(paste(vardep, paste(variables.candidato.1, collapse = "+")))
as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+")))
size.candidato.1 <- c(5, 10, 15, 20, 25, 30, 35, 40, 50)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
avnnetgrid.candidato.1 <- expand.grid(size=size.candidato.1, decay=decay.candidato.1,bag=FALSE)
redavnnet.candidato.1 <- train(as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+"))), data=telco.data.final, method="avNNet",linout = FALSE,
maxit=100, trControl=control,tuneGrid=avnnetgrid, repeats=15)
size.candidato.1 <- c(5)
decay.candidato.1 <- c(0.1, 0.01)
medias1<-cruzadaavnnetbin(data=telco.data.final, vardep=vardep,listconti=variables.candidato.1,
listclass=c(""),grupos=2,sinicio=1234,repe=5, size=size.candidato.1,decay=decay.candidato.1,
repeticiones=5)
medias1$modelo="avnnet1"
medias1
rm(medias1)
control<-trainControl(method = "repeatedcv",number=4,repeats=5, savePredictions = "all",classProbs=TRUE)
size.candidato.1 <- c(5, 10)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
avnnetgrid.candidato.1 <- expand.grid(size=size.candidato.1, decay=decay.candidato.1,bag=FALSE)
redavnnet.candidato.1 <- train(as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+"))),
data=telco.data.final, method="avNNet",linout = FALSE,
maxit=10, trControl=control,tuneGrid=avnnetgrid, repeats=15)
control<-trainControl(method = "repeatedcv",number=4,repeats=5, savePredictions = "all",classProbs=TRUE)
size.candidato.1 <- c(5, 10)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
avnnetgrid.candidato.1 <- expand.grid(size=size.candidato.1, decay=decay.candidato.1,bag=FALSE)
redavnnet.candidato.1 <- train(as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+"))),
data=telco.data.final, method="avNNet",linout = FALSE,
maxit=10, trControl=control,tuneGrid=avnnetgrid.candidato.1, repeats=15)
control<-trainControl(method = "repeatedcv",number=4,repeats=5, savePredictions = "all",classProbs=TRUE)
size.candidato.1 <- c(5, 10)
decay.candidato.1 <- c(0.1)
avnnetgrid.candidato.1 <- expand.grid(size=size.candidato.1, decay=decay.candidato.1,bag=FALSE)
redavnnet.candidato.1 <- train(as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+"))),
data=telco.data.final, method="avNNet",linout = FALSE,
maxit=10, trControl=control,tuneGrid=avnnetgrid.candidato.1, repeats=5)
redavnnet.candidato.1
control<-trainControl(method = "repeatedcv",number=4,repeats=5, savePredictions = "all",classProbs=TRUE)
size.candidato.1 <- c(5, 10)
decay.candidato.1 <- c(0.1, 0.01)
avnnetgrid.candidato.1 <- expand.grid(size=size.candidato.1, decay=decay.candidato.1,bag=FALSE)
redavnnet.candidato.1 <- train(as.formula(paste(vardep, "~", paste(variables.candidato.1, collapse = "+"))),
data=telco.data.final, method="avNNet",linout = FALSE,
maxit=10, trControl=control,tuneGrid=avnnetgrid.candidato.1, repeats=5)
redavnnet.candidato.1
as.formula(paste(vardep, "~", paste(variables.candidato.2, collapse = "+")))
control<-trainControl(method = "repeatedcv",number=5,repeats=15, savePredictions = "all",classProbs=TRUE)
View(telco.data.final)
redavnnet.candidato.1
View(cruzadaavnnetbin)
rm(control)
rm(avnnetgrid.candidato.1)
rm(avnnetgrid.candidato.2)
size.candidato.1 <- c(5, 10, 15, 20, 25, 30, 40)
decay.candidato.1 <- c(0.1, 0.01, 0.001)
cvnnet.candidato.1 <- cruzadaavnnetbin(data=telco.data.final,vardep=vardep,listconti=variables.candidato.1, listclass=c(""),
grupos=5,sinicio=1234,repe=15, size=size.candidato.1,decay=decay.candidato.1,repeticiones=15,itera=100)
# Si quisieramos 20 observaciones por parametro
# h * (k + 1) + h + 1 = 7043 / 20 ~ 352.2
# Si k = 7, entonces 9 * h + 1 = 352.2, es decir, 40 nodos
# Si k = 5, entonces 7 * h + 1 = 352.2, es decir, 50 nodos
size.candidato.2 <- c(5, 10, 15, 20, 25, 30, 40, 50)
decay.candidato.2 <- c(0.1, 0.01, 0.001)
cvnnet.candidato.2 <- cruzadaavnnetbin(data=telco.data.final,vardep=vardep,listconti=variables.candidato.2, listclass=c(""),
grupos=5,sinicio=1234,repe=15, size=size.candidato.2,decay=decay.candidato.2,repeticiones=15,itera=100)
cvnnet.ca
