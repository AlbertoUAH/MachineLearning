ggtitle("Tasa de fallos por modelo y set de variables") + tidytext::scale_x_reordered() + labs(x = "Set de variables") +
theme(axis.text.x = element_text(color = colours, angle = 45, face = "bold", size = 13, vjust = 0.5), text = element_text( face = "bold", size = 13), legend.position = "none")
modelo
modelo <- unique(modelos$modelo)
colours <- ifelse(modelo == "SET_EMPLEADO", "red", "black")
ggplot(modelos, aes(tidytext::reorder_within(modelo, tasa, tipo, fun=mean) , y = tasa, colour = tipo)) +
geom_boxplot(adjust = 1.1) +
facet_wrap( . ~ tipo, scales = "free_x") +
ggtitle("Tasa de fallos por modelo y set de variables") + tidytext::scale_x_reordered() + labs(x = "Set de variables") +
theme(axis.text.x = element_text(color = colours, angle = 45, face = "bold", size = 13, vjust = 0.5), text = element_text( face = "bold", size = 13), legend.position = "none")
ggplot(modelos, aes(tidytext::reorder_within(modelo, tasa, tipo, fun=mean) , y = tasa, colour = tipo)) +
geom_boxplot(adjust = 1.1) +
facet_wrap( . ~ tipo, scales = "free_x") +
ggtitle("Tasa de fallos por modelo y set de variables") + tidytext::scale_x_reordered() + labs(x = "Set de variables") +
theme(axis.text.x = element_text(color = ifelse(modelo == "SET_EMPLEADO", "red", "black"), angle = 45, face = "bold", size = 13, vjust = 0.5), text = element_text( face = "bold", size = 13), legend.position = "none")
ggplot(modelos, aes(tidytext::reorder_within(modelo, auc, tipo, fun=mean) , y = auc, colour = tipo)) +
geom_boxplot(adjust = 1.1) +
facet_wrap( . ~ tipo, scales = "free_x") +
ggtitle("AUC por modelo y set de variables") + tidytext::scale_x_reordered() + labs(x = "Set de variables") +
theme(axis.text.x = element_text(angle = 45, face = "bold", size = 13, vjust = 0.5), text = element_text( face = "bold", size = 13), legend.position = "none")
ggsave('./charts/temp.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/PuntoDeCorte.RData")
var_modelo2
result_bagging <-famdcontour(dataf=surgical_dataset,listconti=var_modelo2,listclass=c(""),vardep=target,
title="gbm",title2=" ",selec=0,modelo="rf",classvar=0,n.minobsinnode=20,shrink=0.2,ntreegbm = 100,
bag.fraction=0.5, alpha1 = 1, alpha2 = 1, alpha3 = 1)
var_modelo2
library(visualpred)
result_rf <- famdcontour(dataf=surgical_dataset,listconti=var_modelo2,listclass=c(""),vardep=target,
title="Random Forest",title2=" ",selec=0,modelo="rf",classvar=0,mtry=2,ntree=2000,sampsize=1000,
nodesize=20, alpha1 = 1, alpha2 = 1, alpha3 = 1)
result_rf[4]
ggsave('./charts/temp.png')
candidato_bic <- c("mortality_rsi", "ccsMort30Rate", "bmi", "month.8", "dow.0",
"Age", "moonphase.0", "baseline_osteoart", "asa_status.0")
result_rf_2 <- famdcontour(dataf=surgical_dataset,listconti=candidato_bic,listclass=c(""),vardep=target,
title="Random Forest",title2=" ",selec=0,modelo="rf",classvar=0,mtry=2,ntree=2000,sampsize=1000,
nodesize=20, alpha1 = 1, alpha2 = 1, alpha3 = 1)
result_rf_2[4]
ggsave('./charts/temp.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Aumentando_Grupos_Repeticiones.RData")
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13))
p
modelos$modelo <- stringi::stri_trans_toupper(modelos$modelo)
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13))
p
modelos$modelo <- with(modelos,
reorder(modelo, auc, mean))
q <- ggplot(modelos, aes(x = modelo, y = auc, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("AUC CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13))
ggpubr::ggarrange(p, q, common.legend = TRUE)
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
modelos$modelo <- with(modelos,
reorder(modelo, auc, mean))
q <- ggplot(modelos, aes(x = modelo, y = auc, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("AUC CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
modelos$modelo <- stringi::stri_replace_all_fixed(modelos$modelo, "GRADIENT_BOOSTING", "GBM")
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
modelos$modelo <- with(modelos,
reorder(modelo, auc, mean))
q <- ggplot(modelos, aes(x = modelo, y = auc, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("AUC CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45, vjust = 0.7))
modelos$modelo <- with(modelos,
reorder(modelo, auc, mean))
q <- ggplot(modelos, aes(x = modelo, y = auc, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("AUC CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45, vjust=0.7))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/comparacion_5_10_folds.png')
modelos$modelo <- with(modelos,
reorder(modelo, tasa, mean))
p <- ggplot(modelos, aes(x = modelo, y = tasa, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("Tasa de fallos CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 15), axis.text.x = element_text(angle=45, vjust = 0.7))
modelos$modelo <- with(modelos,
reorder(modelo, auc, mean))
q <- ggplot(modelos, aes(x = modelo, y = auc, colour = cv)) +
geom_boxplot(notch = FALSE) +
ggtitle("AUC CV 5 folds vs CV 10 folds") +
theme_bw() + theme(text = element_text(face = "bold", size = 15), axis.text.x = element_text(angle=45, vjust=0.7))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/comparacion_5_10_folds.png')
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "xgboost"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$Modelo <- c(rep("LOGISTICA", 10), rep("RED NEURONAL", 10), rep("BAGGING", 10), rep("RANDOM FOREST", 10),
rep("GBM", 10), rep("SVM", 30), rep("XGBOOST", 10))
modelos_actuales$Modelo <- with(modelos_actuales,
reorder(Modelo,tasa, mean))
p <- ggplot(modelos_actuales[modelos_actuales$Modelo %in% c("XGBOOST", "GBM", "RANDOM FOREST", "BAGGING"), ], aes(x = Modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=15, face = "bold"))
modelos_actuales$modelo <- with(modelos_actuales, reorder(modelo,auc, mean))
q <- ggplot(modelos_actuales[modelos_actuales$modelo %in% c("XGBOOST", "GBM", "RANDOM FOREST", "BAGGING"), ], aes(x = modelo, y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=15, face = "bold"))
ggpubr::ggarrange(p,q)
modelos_actuales
modelos_actuales$Modelo <- with(modelos_actuales,
reorder(Modelo,tasa, mean))
p <- ggplot(modelos_actuales[modelos_actuales$Modelo %in% c("XGBOOST", "GBM", "RANDOM FOREST", "BAGGING"), ], aes(x = Modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=15, face = "bold"))
modelos_actuales$Modelo <- with(modelos_actuales, reorder(Modelo,auc, mean))
q <- ggplot(modelos_actuales[modelos_actuales$Modelo %in% c("XGBOOST", "GBM", "RANDOM FOREST", "BAGGING"), ], aes(x = modelo, y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=15, face = "bold"))
ggpubr::ggarrange(p,q)
ggsave('./charts/temp.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/PuntoDeCorte.RData")
p <- ggplot(dataframe_puntos_corte_rf_1, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest) - Modelo 1") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11))
q <- ggplot(dataframe_puntos_corte_bagging_1, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Bagging) - Modelo 1") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11))
ggpubr::ggarrange(p, q, common.legend = TRUE)
p <- ggplot(dataframe_puntos_corte_rf_1, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest) - Modelo 1") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11), axis.text.x = element_text(angle = 45))
q <- ggplot(dataframe_puntos_corte_bagging_1, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Bagging) - Modelo 1") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11), axis.text.x = element_text(angle = 45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
p <- ggplot(dataframe_puntos_corte_rf, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11))
q <- ggplot(dataframe_puntos_corte_gbm, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (gbm)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 11))
ggpubr::ggarrange(p, q, common.legend = TRUE)
dataframe_puntos_corte_rf_1
p <- ggplot(dataframe_puntos_corte_rf, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 12), axis.text.x = element_text(angle=45))
q <- ggplot(dataframe_puntos_corte_gbm, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (gbm)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 12), axis.text.x = element_text(angle=45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/temp.png')
p <- ggplot(dataframe_puntos_corte_rf, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 15), axis.text.x = element_text(angle=45))
q <- ggplot(dataframe_puntos_corte_gbm, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (gbm)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 15), axis.text.x = element_text(angle=45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/temp.png')
p <- ggplot(dataframe_puntos_corte_rf, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (Random Forest)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
q <- ggplot(dataframe_puntos_corte_gbm, aes(x = factor(pto_corte))) +
geom_point(aes(y = sensitividad, color = "Sentividad")) +
geom_point(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (gbm)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 13), axis.text.x = element_text(angle=45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/temp.png')
var_modelo2
q <- ggplot(dataframe_puntos_corte_rf_multiple_seeds[dataframe_puntos_corte_rf_multiple_seeds$pto_corte > 0.1 & dataframe_puntos_corte_rf_multiple_seeds$pto_corte< 0.5, ], aes(x = factor(pto_corte))) +
geom_boxplot(aes(y = sensitividad, color = "Sentividad")) +
geom_boxplot(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (RF - Ampliado)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 15))
r <- ggplot(dataframe_puntos_corte_gbm_multiple_seeds[dataframe_puntos_corte_gbm_multiple_seeds$pto_corte > 0.1 & dataframe_puntos_corte_gbm_multiple_seeds$pto_corte< 0.5, ], aes(x = factor(pto_corte))) +
geom_boxplot(aes(y = sensitividad, color = "Sentividad")) +
geom_boxplot(aes(y = especificidad, color = "Especificidad")) +
ggtitle("Especificidad vs Sensitividad (gbm - Ampliado)") +
labs(x ="Punto de corte", y = "Valor") +
scale_color_manual(values = colors) +  theme(text = element_text(face = "bold", size = 15))
ggpubr::ggarrange(q,r,common.legend = TRUE)
ggsave('./charts/temp.png')
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "python_vs_r"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$modelo <- with(modelos_actuales, reorder(modelo, auc, mean))
ggplot(modelos_actuales, aes(x = modelo, y = auc, col = lenguaje)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo + ensamblados") +
theme(axis.text.x = element_text(face = "bold", vjust=0.8), text = element_text(face = "bold", size=15))
ggsave('./charts/temp.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/SeleccionVariables.RData")
salida.rfe.lr
plot(salida.rfe.lr)
plot(salida.rfe.lr$results)
ggplot(salida.rfe.lr$results)
salida.rfe.lr
rm(list = setdiff(ls(), c("salida.rfe.lr", "salida.rfe.rf")))
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/SeleccionVariables_DatasetCompleto.RData")
salida.rfe.lr
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/SeleccionVariables.RData")
union3$modelo <- with(union3, reorder(modelo,tasa, mean))
t <- ggplot(union3, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
union3$modelo <- with(union3, reorder(modelo,auc, mean))
a <- ggplot(union3, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
ggpubr::ggarrange(t, a, common.legend = TRUE)
library(ggplot2)
union3$modelo <- with(union3, reorder(modelo,tasa, mean))
t <- ggplot(union3, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
union3$modelo <- with(union3, reorder(modelo,auc, mean))
a <- ggplot(union3, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
ggpubr::ggarrange(t, a, common.legend = TRUE)
candidato.aic.2 <- c("mortality_rsi", "ccsMort30Rate", "bmi", "month.8",
"dow.0", "Age", "moonphase.0", "month.0", "baseline_osteoart",
"baseline_charlson", "ahrq_ccs")
candidatos_3         <- list(candidato.aic, candidato.aic.2, candidato.bic, candidato.bic.2, candidato.rfe.lr.2, candidato.rfe.rf)
nombres_candidatos_3 <- c("LOGISTICA AIC", "LOGISTICA AIC (11 vars)" ,"LOGISTICA BIC", "LOGISTICA BIC (8 vars)" , "RFE LR TOP 3", "RFE RF TOP 5")
union3 <- cruzada_logistica(surgical_dataset, target, candidatos_3, nombres_candidatos_3,
grupos = 5, repe = 5)
library(caret)
candidato.aic.2 <- c("mortality_rsi", "ccsMort30Rate", "bmi", "month.8",
"dow.0", "Age", "moonphase.0", "month.0", "baseline_osteoart",
"baseline_charlson", "ahrq_ccs")
candidatos_3         <- list(candidato.aic, candidato.aic.2, candidato.bic, candidato.bic.2, candidato.rfe.lr.2, candidato.rfe.rf)
nombres_candidatos_3 <- c("LOGISTICA AIC", "LOGISTICA AIC (11 vars)" ,"LOGISTICA BIC", "LOGISTICA BIC (8 vars)" , "RFE LR TOP 3", "RFE RF TOP 5")
union3 <- cruzada_logistica(surgical_dataset, target, candidatos_3, nombres_candidatos_3,
grupos = 5, repe = 5)
library(pROC)
candidato.aic.2 <- c("mortality_rsi", "ccsMort30Rate", "bmi", "month.8",
"dow.0", "Age", "moonphase.0", "month.0", "baseline_osteoart",
"baseline_charlson", "ahrq_ccs")
candidatos_3         <- list(candidato.aic, candidato.aic.2, candidato.bic, candidato.bic.2, candidato.rfe.lr.2, candidato.rfe.rf)
nombres_candidatos_3 <- c("LOGISTICA AIC", "LOGISTICA AIC (11 vars)" ,"LOGISTICA BIC", "LOGISTICA BIC (8 vars)" , "RFE LR TOP 3", "RFE RF TOP 5")
union3 <- cruzada_logistica(surgical_dataset, target, candidatos_3, nombres_candidatos_3,
grupos = 5, repe = 5)
union3$modelo <- with(union3, reorder(modelo,tasa, mean))
t <- ggplot(union3, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
union3$modelo <- with(union3, reorder(modelo,auc, mean))
a <- ggplot(union3, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
ggpubr::ggarrange(t, a, common.legend = TRUE)
ggsave('./charts/01_feature_selection_segunda_comparacion.png')
#--- Revisamos logistica aic ¿Podriamos eliminar aquellas variables con menor poder predictivo?
candidato.aic.2 <- c("mortality_rsi", "ccsMort30Rate", "bmi", "month.8",
"dow.0", "Age", "moonphase.0", "month.0", "baseline_osteoart",
"baseline_charlson", "ahrq_ccs")
candidatos_3         <- list(candidato.aic, candidato.aic.2, candidato.bic, candidato.bic.2, candidato.rfe.lr.2, candidato.rfe.rf)
nombres_candidatos_3 <- c("AIC", "AIC (11 vars)" ,"BIC", "BIC (8 vars)" , "RFE LR TOP 3", "RFE RF TOP 5")
union3 <- cruzada_logistica(surgical_dataset, target, candidatos_3, nombres_candidatos_3,
grupos = 5, repe = 5)
union3$modelo <- with(union3, reorder(modelo,tasa, mean))
t <- ggplot(union3, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
union3$modelo <- with(union3, reorder(modelo,auc, mean))
a <- ggplot(union3, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
ggpubr::ggarrange(t, a, common.legend = TRUE)
ggsave('./charts/01_feature_selection_segunda_comparacion.png')
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
imp1 <- show_vars_importance(rf_modelo_aic, "Con ahrq_ccs")
imp2 <- show_vars_importance(rf_modelo_bic, "Con month.8")
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
library(dplyr)
imp1 <- show_vars_importance(rf_modelo_aic, "Con ahrq_ccs")
imp2 <- show_vars_importance(rf_modelo_bic, "Con month.8")
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
show_vars_importance <- function(modelo, title) {
final<-modelo$finalModel
tabla<-as.data.frame(final$importance)
tabla<-tabla[order(tabla$MeanDecreaseAccuracy),]
vars <- rownames(tabla)
tabla$vars <- factor(vars, levels=unique(vars))
rownames(tabla) <- NULL
print(tabla %>% arrange(.,-MeanDecreaseAccuracy))
s <- tabla %>% arrange(.,-MeanDecreaseAccuracy) %>%
ggplot(aes(MeanDecreaseAccuracy, vars)) +
geom_col() +
geom_label(aes(label=round(MeanDecreaseAccuracy,3), x=MeanDecreaseAccuracy+0.01), size=3.5, colour="blue", fontface = "bold") +
scale_x_continuous(expand=expansion(c(0,0.04))) +
ggtitle(title) +
theme_bw() +
theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
axis.title=element_blank(),
text = element_text(size=14, face = "bold"))
return(s)
}
imp1 <- show_vars_importance(rf_modelo_aic, "Con ahrq_ccs")
imp2 <- show_vars_importance(rf_modelo_bic, "Con month.8")
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
imp1 <- show_vars_importance(rf_modelo_aic, "Con ahrq_ccs")
imp2 <- show_vars_importance(rf_modelo_bic, "Con month.8")
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
ggsave('./charts/01_feature_selection_comparacion_random_forest.png')
show_vars_importance <- function(modelo, title) {
final<-modelo$finalModel
tabla<-as.data.frame(final$importance)
tabla<-tabla[order(tabla$MeanDecreaseAccuracy),]
vars <- rownames(tabla)
tabla$vars <- factor(vars, levels=unique(vars))
rownames(tabla) <- NULL
print(tabla %>% arrange(.,-MeanDecreaseAccuracy))
s <- tabla %>% arrange(.,-MeanDecreaseAccuracy) %>%
ggplot(aes(MeanDecreaseAccuracy, vars)) +
geom_col() +
geom_label(aes(label=round(MeanDecreaseAccuracy,3), x=MeanDecreaseAccuracy+0.01), size=4, colour="blue", fontface = "bold") +
scale_x_continuous(expand=expansion(c(0,0.04))) +
ggtitle(title) +
theme_bw() +
theme(panel.grid.minor=element_blank(),
panel.grid.major=element_blank(),
axis.title=element_blank(),
text = element_text(size=15, face = "bold"))
return(s)
}
imp1 <- show_vars_importance(rf_modelo_aic, "Set variables AIC")
imp2 <- show_vars_importance(rf_modelo_bic, "Set variables BIC")
ggpubr::ggarrange(imp1, imp2, common.legend = TRUE)
ggsave('./charts/01_feature_selection_comparacion_random_forest.png')
candidatos_4         <- list(candidato.rfe.lr.2, candidato.aic, candidato.bic, top4, top4_soloaic, candidato.rfe.rf,
candidato.bic.4, candidato.bic.5, candidato.aic.top5)
nombres_candidatos_4 <- c("RFE LR TOP 3", "AIC" , "BIC" , "1", "2", "RFE RF TOP 5",
"4", "5", "3")
union4 <- cruzada_logistica(surgical_dataset, target, candidatos_4, nombres_candidatos_4,
grupos = 5, repe = 5)
union4$modelo <- with(union4, reorder(modelo,tasa, mean))
t <- ggplot(union4, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
t
union4$modelo <- with(union4, reorder(modelo,auc, mean))
a <- ggplot(union4, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
a
ggpubr::ggarrange(t, a, common.legend = TRUE)
ggsave('./charts/01_feature_selection_comparacion_final.png')
top4_soloaic <- c("Age", "mortality_rsi", "ahrq_ccs", "bmi")
top4 <- c("Age", "mortality_rsi", "bmi", "month.8")
candidato.aic.top5 <- c("Age", "mortality_rsi", "bmi", "month.8", "ahrq_ccs")
candidato.bic.4 <- c("Age", "mortality_rsi", "bmi", "month.8", "baseline_osteoart")
candidato.bic.5 <- c("Age", "mortality_rsi", "bmi", "month.8", "ccsMort30Rate")
candidatos_4         <- list(candidato.rfe.lr.2, candidato.aic, candidato.bic, top4, top4_soloaic, candidato.rfe.rf,
candidato.bic.4, candidato.bic.5, candidato.aic.top5)
nombres_candidatos_4 <- c("RFE LR TOP 3", "AIC" , "BIC" , "1", "2", "RFE RF TOP 5",
"4", "5", "3")
union4 <- cruzada_logistica(surgical_dataset, target, candidatos_4, nombres_candidatos_4,
grupos = 5, repe = 5)
union4$modelo <- with(union4, reorder(modelo,tasa, mean))
t <- ggplot(union4, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
t
union4$modelo <- with(union4, reorder(modelo,auc, mean))
a <- ggplot(union4, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
a
ggpubr::ggarrange(t, a, common.legend = TRUE)
ggsave('./charts/01_feature_selection_comparacion_final.png')
union4$modelo <- with(union4, reorder(modelo,tasa, mean))
t <- ggplot(union4, aes(x = modelo, y = tasa)) +
geom_boxplot() +
ggtitle("Comparacion (tasa fallos)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
t
union4$modelo <- with(union4, reorder(modelo,auc, mean))
a <- ggplot(union4, aes(x = modelo, y = auc)) +
geom_boxplot() +
ggtitle("Comparacion (AUC)") +
labs(color='Dataset')  +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.8))
a
ggpubr::ggarrange(t, a, common.legend = TRUE)
ggsave('./charts/01_feature_selection_comparacion_final.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/RedesNeuronales.RData")
union_3
union_3$Size <- c(rep("10", 5), rep("15", 5), rep("20", 5), rep("25", 5), rep("30", 5))
union_3$Size <- c(rep("10", 5), rep("15", 10), rep("20", 5), rep("25", 5), rep("30", 5))
union_3$Decay <- c(rep("0.01", 10), rep("0.001", 20))
union_3$modelo <- with(union_3, reorder(modelo,tasa, mean))
p <- ggplot(union_3, aes(x = Size, y = tasa, col = Decay)) + geom_boxplot() + ggtitle("Comparacion (tasa fallos)") +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(vjust = 0.8, size = 16))
union_3$modelo <- with(union_3, reorder(modelo,auc, mean))
q <- ggplot(union_3, aes(x = Size, y = auc, col = Decay)) + geom_boxplot() + ggtitle("Comparacion (AUC)") +
theme(text = element_text(size=15, face = "bold"), axis.text.x = element_text(vjust = 0.8, size=16))
ggpubr::ggarrange(p, q, common.legend = TRUE)
union_3
ggsave('./charts/temp.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/SVM.RData")
SVM_RBF_modelo2
SVM_RBF_modelo2$results
SVM_RBF_modelo1$results
SVM_RBF_modelo2$pred
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/PuntoDeCorte.RData")
library(visualpred)
var_modelo2
result_rf <- famdcontour(dataf=surgical_dataset,listconti=var_modelo2,listclass=c(""),vardep=target,
title="Random Forest",title2=" ",selec=0,modelo="rf",classvar=0,mtry=2,ntree=2000,sampsize=1000,
nodesize=20, alpha1 = 1, alpha2 = 1, alpha3 = 1)
result_bagging <-famdcontour(dataf=surgical_dataset,listconti=var_modelo2,listclass=c(""),vardep=target,
title="gbm",title2=" ",selec=0,modelo="rf",classvar=0,n.minobsinnode=20,shrink=0.2,ntreegbm = 100,
bag.fraction=0.5, alpha1 = 1, alpha2 = 1, alpha3 = 1)
result_rf[4]
result_rf[2]
ggsave('./charts/temp.png')
