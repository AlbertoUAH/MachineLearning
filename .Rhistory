nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = 3,
ntree = 2000, grupos = 5, repe = 5)
bagging_modelo1_mtry3$nodesizes <- as.numeric(c(data.frame(strsplit(bagging_modelo1_mtry3$modelo, '+', fixed = T))[1,]))
bagging_modelo1_mtry3$sampsizes <- as.numeric(c(data.frame(strsplit(bagging_modelo1_mtry3$modelo, '+', fixed = T))[2,]))
bagging_modelo1_mtry3_temp <- bagging_modelo1_mtry3 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(tasa_fallos_media = mean(tasa))
p <- ggplot(bagging_modelo1_mtry3_temp, aes(x=factor(sampsizes), y=tasa_fallos_media,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo1_mtry3_temp <- bagging_modelo1_mtry3 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(auc_media = mean(auc))
t <- ggplot(bagging_modelo1_mtry3_temp, aes(x=factor(sampsizes), y=auc_media,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo1.png')
bagging_modelo1_3
ggplot(bagging_modelo1_3, aes(x=factor(sampsizes), y=tasa_fallos_media,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa_fallos_media,
colour=modelo)) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa,
colour=modelo)) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa,
colour=modelo)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo1_3$modelo <- with(bagging_modelo1_3,
reorder(factor(mtry),tasa, mean))
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo1_3$modelo <- with(bagging_modelo1_3,
reorder(modelo,tasa, mean))
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo1_3$modelo <- with(bagging_modelo1_3,
reorder(modelo,auc, mean))
t <- ggplot(bagging_modelo1_3, aes(x=modelo, y=auc)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
bagging_modelo1_3 <- bagging_modelo1_3[bagging_modelo1_3$modelo != "20+2500", ]
bagging_modelo1_3$modelo <- with(bagging_modelo1_3,
reorder(modelo,tasa, mean))
p <- ggplot(bagging_modelo1_3, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo1_3$modelo <- with(bagging_modelo1_3,
reorder(modelo,auc, mean))
t <- ggplot(bagging_modelo1_3, aes(x=modelo, y=auc)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo1_sampsizes.png')
1000 / 5854
bagging_modelo1_3_bis
p <- ggplot(bagging_modelo1_3_bis[bagging_modelo1_3_bis$modelo %in% c("20+1", "20+1000")], aes(x=modelo, y=tasa, col=rep)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo1_3_bis
p <- ggplot(union_bagging_modelo1_bis[union_bagging_modelo1_bis$modelo %in% c("20+1", "20+1000")], aes(x=modelo, y=tasa, col=rep)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
union_bagging_modelo1_bis
bagging_modelo1_3_bis
aux <- rbind(bagging_modelo1_3[bagging_modelo1_3$modelo == "20+1", ],  bagging_modelo1_3[bagging_modelo1_3$modelo == "20+1000", ], bagging_modelo1_3_bis[bagging_modelo1_3_bis$modelo == "20+1", ], bagging_modelo1_3_bis[bagging_modelo1_3_bis$modelo == "20+1000", ])
aux
aux$rep <- c(rep("10", 20), rep("20", 40))
p <- ggplot(aux, aes(x=modelo, y=tasa, col=rep)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(aux, aes(x=modelo, y=tasa, col=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
t <- ggplot(aux, aes(x=modelo, y=auc, col = rep)) +
geom_boxplot() +
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
aux$modelo <- with(aux,
reorder(modelo,tasa, mean))
p <- ggplot(aux, aes(x=modelo, y=tasa, col=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
aux$modelo <- with(aux,
reorder(modelo,auc, mean))
t <- ggplot(aux, aes(x=modelo, y=auc, col = rep)) +
geom_boxplot() +
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo1_10_folds.png')
bagging_modelo2_mtry2
bagging_modelo2_mtry2_temp <- bagging_modelo2_mtry2 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(tasa_fallos_media = mean(tasa))
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=modelo, y=tasa_fallos_media)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo2_mtry2_temp <- bagging_modelo2_mtry2 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(tasa_fallos_media = mean(tasa))
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=modelo, y=tasa_fallos_media)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=modelo, y=tasa_fallos_media, colour=factor(nodesizes))) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=factor(sampsizes), y=tasa_fallos_media, colour=factor(nodesizes))) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo2_mtry2_temp
bagging_modelo2_mtry2
bagging_modelo2_mtry2_temp <- bagging_modelo2_mtry2 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(tasa_fallos_media = mean(tasa))
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=factor(sampsizes), y=tasa_fallos_media, colour=factor(nodesizes))) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(bagging_modelo2_mtry2_temp, aes(x=factor(sampsizes), y=tasa_fallos_media, colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo2_mtry2_temp <- bagging_modelo2_mtry2 %>% group_by(modelo, sampsizes, nodesizes) %>% summarise(auc_media = mean(auc))
t <- ggplot(bagging_modelo2_mtry2_temp, aes(x=factor(sampsizes), y=auc_media,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=2.5, shape = 20) +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo2.png')
bagging_modelo2_2
bagging_modelo2_2
p <- ggplot(bagging_modelo2_2, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(factor(mtry),tasa, mean))
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,tasa, mean))
p <- ggplot(bagging_modelo2_2, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
p
t <- ggplot(bagging_modelo2_2, aes(x=modelo, y=auc
)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
t
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,auc, mean))
t <- ggplot(bagging_modelo2_2, aes(x=modelo, y=auc
)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
bagging_modelo2_2 <- bagging_modelo2_2[bagging_modelo2_2$modelo!="20+2500", ]
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,tasa, mean))
p <- ggplot(bagging_modelo2_2, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,auc, mean))
t <- ggplot(bagging_modelo2_2, aes(x=modelo, y=auc
)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 1)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,tasa, mean))
p <- ggplot(bagging_modelo2_2, aes(x=modelo, y=tasa)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("Tasa de fallos (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
bagging_modelo2_2$modelo <- with(bagging_modelo2_2,
reorder(modelo,auc, mean))
t <- ggplot(bagging_modelo2_2, aes(x=modelo, y=auc
)) +
geom_boxplot() +
scale_colour_manual(values=rainbow(7))+
ggtitle("AUC (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
'./charts/random_forest/04_comp_tasa_auc_modelo2_sampsizes.png'
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo2_sampsizes.png')
bagging_modelo2_2bagging_modelo2_2aux
aux <- rbind
bagging_modelo2_mtry2
aux <- rbind(bagging_modelo2_mtry2[bagging_modelo2_mtry2$modelo %in% c("20+1", "20+1000"), ])
aux
aux <- rbind(bagging_modelo2_mtry2[bagging_modelo2_mtry2$modelo %in% c("20+1", "20+1000"), ], bagging_modelo2_2_bis[bagging_modelo2_2_bis$modelo %in% c("20+1", "20+1000"), ])
bagging_modelo2_2_bis
aux <- rbind(bagging_modelo2_mtry2[bagging_modelo2_mtry2$modelo %in% c("20+1", "20+1000"), ], bagging_modelo2_2_bis[bagging_modelo2_2_bis$modelo %in% c("20+1", "20+1000"), ])
bagging_modelo2_mtry2
aux <- rbind(bagging_modelo2_mtry2[bagging_modelo2_mtry2$modelo %in% c("20+1", "20+1000"), c("tasa", "auc", "modelo")], bagging_modelo2_2_bis[bagging_modelo2_2_bis$modelo %in% c("20+1", "20+1000"), ])
aux
aux
aux$rep <- c(rep("5", 20), rep("10", 40))
aux$rep <- c(rep("5", 10), rep("10", 20))
aux$rep <- c(rep("5", 10), rep("10", 40))
aux$modelo <- with(aux, reorder(modelo,auc mean))
aux$modelo <- with(aux, reorder(modelo,tasa mean))
aux
aux
aux$modelo <- with(aux, reorder(modelo,tasa mean))
aux$modelo <- with(aux, reorder(modelo,tasa, mean))
theme(text = element_text(size=13, face = "bold"))
theme(text = element_text(size=13, face = "bold"))
p
p <- ggplot(aux, aes(x=factor(sampsize y=tasa, colour=rep
theme(text = element_text(size=13, face = "bold"))
ggtitle("Tasa de fallos (Modelo 22)") + theme(text = element_text(size=13, face = "bold"))
p <- ggplot(aux, aes(x=factor(sampsize y=tasa, colour=rep))) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 22)") + theme(text = element_text(size=13, face = "bold"))
p <- ggplot(aux, aes(x=sampsize y=tasa, colour=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 22)") + theme(text = element_text(size=13, face = "bold"))
aux
p <- ggplot(aux, aes(x=modelo y=tasa, colour=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 22)") + theme(text = element_text(size=13, face = "bold"))
p <- ggplot(aux, aes(x=modelo, y=tasa, colour=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 22)") + theme(text = element_text(size=13, face = "bold"))
p
aux$modelo <- with(aux, reorder(modelo,auc, mean))
aux$modelo <- with(aux, reorder(modelo,tasa, mean))
p <- ggplot(aux, aes(x=modelo, y=tasa, colour=rep)) +
geom_boxplot() +
ggtitle("Tasa de fallos (Modelo 2)") + theme(text = element_text(size=13, face = "bold"))
aux$modelo <- with(aux,
reorder(modelo,auc, mean))
t <- ggplot(auc, aes(x=modelo, y=auc, col = rep)) +
geom_boxplot() +
ggtitle("AUC (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
t <- ggplot(auc, aes(x=modelo, y=auc, colour = rep)) +
geom_boxplot() +
ggtitle("AUC (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
t <- ggplot(aux, aes(x=modelo, y=auc, colour = rep)) +
geom_boxplot() +
ggtitle("AUC (Modelo 2)") +
theme(text = element_text(size=13, face = "bold"))
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/04_comp_tasa_auc_modelo2_sampsizes2_10_folds.png')
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/RandomForest.RData")
modelos_actuales
modelos_actuales[c(61:90), ]
modelos_actuales[c(61:90), ]$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90)]$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), "modelo"],
reorder(modelo,tasa, mean))
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), "modelo"],
reorder(modelo,tasa, mean))
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,tasa, mean))
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,auc, mean))
q <- ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
q
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,auc, mean))
q <- ggplot(modelos_actuales, aes(x = modelo, y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
q
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,auc, mean))
q <- ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
p
q
ggpubr::ggarrange(p, q, common.legend = TRUE)
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")  +
ggtitle("Tasa de fallos (Modelo 2)") + theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45))
modelos_actuales[c(61:90), "modelo"] <- with(modelos_actuales[c(61:90), ],
reorder(modelo,auc, mean))
q <- ggplot(modelos_actuales[c(61:90), ], aes(x = modelo, y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")  + theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45))
ggpubr::ggarrange(p, q, common.legend = TRUE)
ggsave('./charts/comparativas/03_rf_con_sin_reemp.png')
bagging_1_1
bagging_1_1$modelInfo
matriz_conf_1
matriz_conf_2
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "random_forest"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(vjust = 0.5))
p
modelos_actuales$tipo <- c(rep("LOGISTICA", 20), rep("RED NEURONAL", 20), rep("BAGGING", 20), rep("RANDOM FOREST", 20))
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(vjust = 0.5))
p
p <- ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
p
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,auc, mean))
t <- ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(vjust = 0.5))
t
t <- ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
p
ggsave('./charts/comparativas/03_log_avnnet_bagging_rf_tasa.jpeg')
t
ggsave('./charts/comparativas/03_log_avnnet_bagging_rf_auc.jpeg')
modelos_actuales_zoomed <- modelos_actuales[modelos_actuales$modelo %in% c("BAG. MODELO 1", "BAG. MODELO 2", "RF. MODELO 1",
"RF. MODELO 2"), ]
modelos_actuales_zoomed$modelo <- with(modelos_actuales_zoomed,
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales_zoomed, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo (solo BAGGING)") +
theme(text = element_text(size=13, face = "bold"))
p
modelos_actuales_zoomed$modelo <- with(modelos_actuales_zoomed,
reorder(modelo,auc, mean))
t <- ggplot(modelos_actuales_zoomed, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo (solo BAGGING)") +
theme(text = element_text(size=13, face = "bold"))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
modelos_actuales_zoomed <- modelos_actuales[modelos_actuales$modelo %in% c("BAG. MODELO 1", "BAG. MODELO 2", "RF. MODELO 1",
"RF. MODELO 2"), ]
modelos_actuales_zoomed$modelo <- with(modelos_actuales_zoomed,
reorder(modelo,tasa, mean))
p <- ggplot(modelos_actuales_zoomed, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo (solo BAGGING)") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
p
modelos_actuales_zoomed$modelo <- with(modelos_actuales_zoomed,
reorder(modelo,auc, mean))
t <- ggplot(modelos_actuales_zoomed, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo (solo BAGGING)") +
theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
t
ggpubr::ggarrange(p, t, common.legend = TRUE)
ggsave('./charts/random_forest/comparacion_bagging_rf.png')
