reorder(modelo,tasa, mean))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(text = element_text(size=13, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(text = element_text(size=11, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
ggsave('./charts/comparativas/06_log_avnnet_bagging_rf_gbm_svm_tasa.jpeg')
ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(text = element_text(size=11, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,auc, mean))
ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(text = element_text(size=11, face = "bold"), axis.text.x = element_text(angle = 45, vjust = 0.5))
ggsave('./charts/comparativas/06_log_avnnet_bagging_rf_gbm_svm_auc.jpeg')
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/SVM.RData")
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/XGBoost.RData")
plot(xgbm_2, main = "Tuneo parametros XGBoost Modelo 2")
xgbm_2
xgbm_2
xgbm_2$results
xgbm_2_salida <- xgbm_2$results
xgbm_3$results
#-- Estudio del Early Stopping
#   Modelo 1 y Modelo 2
xgbm_2_salida <- rbind(xgbm_2$results, xgbm_4$results)
xgbm_2_salida$eta     <- as.factor(xgbm_2_salida$eta)
xgbm_2_salida$nrounds <- as.factor(xgbm_2_salida$nrounds)
xgbm_2_salida$min_child_weight <- as.factor(xgbm_2_salida$min_child_weight)
ggplotgui::ggplot_shiny(xgbm_2_salida)
ggplotgui::ggplot_shiny(xgbm_2_salida)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight ) +
theme_bw()
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight ) +
theme_bw()
xgbm_4
xgbm_4$results
rbind(xgbm_2$results, xgbm_4$results)
rbind(xgbm_2$results, xgbm_4$results)
xgbm_2_salida <- xgbm_2$results
xgbm_2_salida$eta     <- as.factor(xgbm_2_salida$eta)
xgbm_2_salida$nrounds <- as.factor(xgbm_2_salida$nrounds)
xgbm_2_salida$min_child_weight <- as.factor(xgbm_2_salida$min_child_weight)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight ) +
theme_bw()
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
#-- Estudio del Early Stopping
#   Modelo 1 y Modelo 2
xgbm_2_salida <- as.data.frame(xgbm_2$results)
xgbm_2_salida$eta     <- as.factor(xgbm_2_salida$eta)
xgbm_2_salida$nrounds <- as.factor(xgbm_2_salida$nrounds)
xgbm_2_salida$min_child_weight <- as.factor(xgbm_2_salida$min_child_weight)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
#-- Estudio del Early Stopping
#   Modelo 1 y Modelo 2
xgbm_2_salida <- as.data.frame(xgbm_2$results)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
xgbm_2_salida$eta     <- as.factor(xgbm_2_salida$eta)
xgbm_2_salida$nrounds <- as.factor(xgbm_2_salida$nrounds)
xgbm_2_salida$min_child_weight <- as.factor(xgbm_2_salida$min_child_weight)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds))) +
geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds), group = 1)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
xgbm_2_salida <- as.data.frame(xgbm_2$results)
xgbm_2_salida$eta     <- as.factor(xgbm_2_salida$eta)
xgbm_2_salida$nrounds <- as.factor(xgbm_2_salida$nrounds)
xgbm_2_salida$min_child_weight <- as.factor(xgbm_2_salida$min_child_weight)
xgbm_2_salida$Accuracy <- as.numeric(xgbm_2_salida$Accuracy)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
#-- Estudio del Early Stopping
#   Modelo 1 y Modelo 2
xgbm_2_salida <- as.data.frame(xgbm_2$results)
ggplot(xgbm_2_salida, aes(x = factor(eta), y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = nrounds)) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=16, face = "bold")
)
ggplot(xgbm_2_salida, aes(x = eta, y = Accuracy, colour = factor(nrounds))) +
geom_point() + geom_line() +
facet_grid( . ~ min_child_weight, labeller = label_both) +
theme_bw()  +
theme(
legend.position = 'top',
text = element_text(size=13, face = "bold")
)
ggsave('./charts/xgboost/tuneo_xgboost_modelo2.png')
#   Modelo 1
gbm_modelos_early_stopping %>% filter(Modelo == "Modelo 1") %>%
ggplot(aes(x = nrounds, y = Accuracy, label = nrounds,
group = eta, col = eta)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 1 (Early Stopping)")
gbm_modelos_early_stopping
#   Modelo 2
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta = 0.1, ] %>% filter(Modelo == "Modelo 2") %>%
ggplot(aes(x = nrounds, y = Accuracy, label = nrounds,
group = eta, col = eta)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 2 (Early Stopping)")
#   Modelo 2
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>%
ggplot(aes(x = nrounds, y = Accuracy, label = nrounds,
group = eta, col = eta)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 2 (Early Stopping)")
#   Modelo 2
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>%
ggplot(aes(x = nrounds, y = Accuracy, label = nrounds)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 2 (Early Stopping)")
#   Modelo 2
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>%
ggplot(aes(x = factor(nrounds), y = Accuracy, label = nrounds)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 2 (Early Stopping)")
#   Modelo 2
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>%
ggplot(aes(x = factor(nrounds), y = Accuracy)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelo 2 (Early Stopping)")
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(n.trees), y = Accuracy, label = factor(n.trees),
group = shrinkage, col = shrinkage)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelo1_es_final[gbm_modelo1_es_final$n.trees == 100, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(n.trees), y = Accuracy, label = factor(n.trees),
group = shrinkage, col = shrinkage)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$n.trees == 100, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(n.trees),
group = shrinkage, col = shrinkage)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$nrounds == 100, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = shrinkage, col = shrinkage)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$nrounds == 100, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$nrounds == 100, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ], aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1, ]  %>% filter(Modelo == "Modelo 2"), aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds >= 100, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds >= 100, ]  %>% filter(Modelo == "Modelo 2"), aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds >= 100, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds == 100, ]  %>% filter(Modelo == "Modelo 2"), aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion Modelo 1 (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds >= 100, ] %>% filter(Modelo == "Modelo 2") %>% ggplot(aes(x = factor(nrounds), y = Accuracy, label = factor(nrounds),
group = eta, col = eta)) +
geom_point() +
geom_line() + geom_label(data = gbm_modelos_early_stopping[gbm_modelos_early_stopping$eta == 0.1 & gbm_modelos_early_stopping$nrounds == 100, ]  %>% filter(Modelo == "Modelo 2"), aes(label = round(Accuracy, 3)), show.legend = FALSE) +
ggtitle("Evolucion XGboost (Early Stopping)") +
theme(
text = element_text(size=14, face = "bold")
)
ggsave('./charts/xgboost/early_stopping.png')
xgbm_6$results
gbm_modelos_max_depth[gbm_modelos_max_depth$Modelo == "Modelo 1", ] %>%
ggplot(aes(x = max_depth, y = Accuracy, label = nrounds)) +
geom_point() +
geom_line() +
ggtitle("Evolucion Accuracy Modelos 1 y 2 (max_depth)")
control
xgbm_6$results
View(cruzadaxgbmbin)
salida <- cruzadaxgbmbin(data=surgical_dataset, vardep=target,
listconti=lista.continua,
listclass=c(""),
grupos=5,sinicio=1234,repe=5,nrounds=100,eta=0.01,
min_child_weight=20,gamma=0,colsample_bytree=1,subsample=1,max_depth=c(1,3,6,10,15,20))
salida <- cruzadaxgbmbin(data=surgical_dataset, vardep=target,
listconti=var_modelo2,
listclass=c(""),
grupos=5,sinicio=1234,repe=5,nrounds=100,eta=0.01,
min_child_weight=20,gamma=0,colsample_bytree=1,subsample=1,max_depth=c(1,3,6,10,15,20))
salida
tuneo_xgboost_modelo1
aux <- data.frame()
for (max_depth in c(1,3,6,10,15,20)) {
salida <- cruzadaxgbmbin(data=surgical_dataset, vardep=target,
listconti=var_modelo2,
listclass=c(""),
grupos=5,sinicio=1234,repe=5,nrounds=100,eta=0.01,
min_child_weight=20,gamma=0,colsample_bytree=1,subsample=1,max_depth=max_depth)
salida$max_depth <- rep(max_depth, 5)
aux <- rbind(aux, salida)
}
aux
aux$modelo <- with(aux, reorder(modelo,tasa, mean))
ggplot(aux, aes(x = modelo, y = tasa, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
aux$modelo <- with(aux, reorder(modelo,tasa, mean))
ggplot(aux, aes(x = modelo, y = tasa, col = max_depth)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(aux, aes(x = max_depth, y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(aux, aes(x = factor(max_depth), y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(aux, aes(x = factor(max_depth), y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
ggplot(aux, aes(x = factor(modelo), y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
aux$modelo <- with(aux, reorder(max_depth,tasa, mean))
ggplot(aux, aes(x = factor(max_depth), y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
aux$modelo <- with(aux, reorder(max_depth,auc, mean))
ggplot(aux, aes(x = factor(max_depth), y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
aux$modelo <- with(aux, reorder(max_depth,tasa, mean))
p <- ggplot(aux, aes(x = factor(max_depth), y = tasa)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
aux$modelo <- with(aux, reorder(max_depth,auc, mean))
q <- ggplot(aux, aes(x = factor(max_depth), y = auc)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por max_depth") +
theme(
text = element_text(size=14, face = "bold")
)
ggpubr::ggarrange(p, q)
ggsave('./charts/xgboost/max_depth.png')
tuneo_xgboost_modelo1
tuneo_modelo2$modelo <- with(tuneo_modelo2, reorder(modelo,auc, mean))
ggplot(tuneo_modelo2, aes(x = modelo, y = auc, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggplot(tuneo_modelo2, aes(x = modelo, y = auc, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") +
theme(
text = element_text(size=14, face = "bold")
)
tuneo_modelo2
stringi::stri_replace_all_fixed("nrounds: 100; eta: 0.1; min_child: 20; ", "", tuneo_modelo2$modelo)
stringi::stri_replace_all_fixed(tuneo_modelo2$modelo, "nrounds: 100; eta: 0.1; min_child: 20; ", "")
tuneo_modelo2$modelo <- stringi::stri_replace_all_fixed(tuneo_modelo2$modelo, "nrounds: 100; eta: 0.1; min_child: 20; ", "")
tuneo_modelo2$modelo <- with(tuneo_modelo2, reorder(modelo,auc, mean))
ggplot(tuneo_modelo2, aes(x = modelo, y = auc, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") +
theme(
text = element_text(size=14, face = "bold")
)
tuneo_modelo2$modelo <- with(tuneo_modelo2, reorder(modelo,auc, mean))
p <- ggplot(tuneo_modelo2, aes(x = modelo, y = auc, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por subsample") +
theme(
text = element_text(size=14, face = "bold")
)
tuneo_modelo2$modelo <- with(tuneo_modelo2, reorder(modelo,tasa, mean))
q <- ggplot(tuneo_modelo2, aes(x = modelo, y = tasa, col = rep)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por subsample") +
theme(
text = element_text(size=14, face = "bold")
)
ggpubr::ggarrange(q, p, common.legend = TRUE)
ggsave('./charts/xgboost/subsample.png')
control <- trainControl(method = "repeatedcv",number=5,repeats=10,
savePredictions = "all",classProbs=TRUE)
xgbmgrid <- expand.grid(min_child_weight=20,eta=0.1, nrounds=100,
max_depth=6,gamma=0,colsample_bytree=1,subsample=1)
set.seed(1234)
xgbm_modelo2 <- train(as.formula(paste0(target,"~",paste0(var_modelo2, collapse = "+"))),data=surgical_dataset,
method="xgbTree",trControl=control,tuneGrid=xgbmgrid,verbose=FALSE)
matriz_conf_2 <- matriz_confusion_predicciones(xgbm_modelo2, NULL, surgical_test_data, 0.5)
matriz_conf_2
tuneo_xgboost_modelo1_10rep
tuneo_xgboost_modelo2_10rep
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "xgboost"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$tipo <- c(rep("LOGISTICA", 20), rep("RED NEURONAL", 20), rep("BAGGING", 20), rep("RANDOM FOREST", 20),
rep("GBM", 20), rep("SVM", 60), rep("XGBOOST", 10))
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "xgboost"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$tipo <- c(rep("LOGISTICA", 20), rep("RED NEURONAL", 20), rep("BAGGING", 20), rep("RANDOM FOREST", 20),
rep("GBM", 20), rep("SVM", 60), rep("XGBOOST", 10))
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=14, face = "bold"))
ggsave('./charts/comparativas/07_log_avnnet_bagging_rf_gbm_svm_xgboost_tasa.jpeg')
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,auc, mean))
ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=14, face = "bold"))
ggsave('./charts/comparativas/07_log_avnnet_bagging_rf_gbm_svm_xgboost_auc.jpeg')
modelos_actuales <- as.data.frame(read_excel("./ComparativaModelos.xlsx",
sheet = "xgboost"))
modelos_actuales$tasa <- as.numeric(modelos_actuales$tasa)
modelos_actuales$auc <- as.numeric(modelos_actuales$auc)
modelos_actuales$tipo <- c(rep("LOGISTICA", 10), rep("RED NEURONAL", 10), rep("BAGGING", 10), rep("RANDOM FOREST", 10),
rep("GBM", 10), rep("SVM", 30), rep("XGBOOST", 10))
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,tasa, mean))
ggplot(modelos_actuales, aes(x = modelo, y = tasa, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=14, face = "bold"))
ggsave('./charts/comparativas/07_log_avnnet_bagging_rf_gbm_svm_xgboost_tasa.jpeg')
modelos_actuales$modelo <- with(modelos_actuales,
reorder(modelo,auc, mean))
ggplot(modelos_actuales, aes(x = modelo, y = auc, col = tipo)) +
geom_boxplot(alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5), text = element_text(size=14, face = "bold"))
ggsave('./charts/comparativas/07_log_avnnet_bagging_rf_gbm_svm_xgboost_auc.jpeg')
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/XGBoost.RData")
