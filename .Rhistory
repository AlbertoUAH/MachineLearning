ggplot(bagging_modelo1, aes(x=factor(sampsizes), y=tasa,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
#-- Distribucion del AUC
#  Parece buen candidato 20 nodeszie y sampsize todos salvo 100
ggplot(bagging_modelo1, aes(x=factor(sampsizes), y=auc,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
nodesizes.1 <- list(100)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
#--- Creamos el cluster
cluster <- makeCluster(detectCores() - 1)
registerDoParallel(cluster)
nodesizes.1 <- list(100)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
bagging_modelo1_2
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000"]
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ]
rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_2$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_2$modelo == "100+3000", ]
)
rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "100+1", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_2[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_2[bagging_modelo1_4$modelo == "100+1", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_2[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_2[bagging_modelo1_4$modelo == "100+1", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
ggplot(union_bagging_modelo1, aes(x=factor(sampsizes), y=tasa,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
ggplot(union_bagging_modelo1, aes(x=factor(modelo), y=tasa,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
ggplot(union_bagging_modelo1, aes(x=factor(modelo), y=tasa)) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
ggplot(union_bagging_modelo1, aes(x=factor(modelo), y=tasa)) +
geom_boxplot(position=position_dodge(width=0.3),size=3, shape = 18)
ggplot(union_bagging_modelo1, aes(x=factor(modelo), y=tasa)) +
geom_boxplot()
View(cruzadalogistica)
print(ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = fill, colour = line,
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo"))
print(ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo"))
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
union_bagging_modelo1
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
nodesizes.1 <- list(20)
sampsizes.1 <- list(1, 1000)
bagging_modelo1_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
# A partir de 2500 submuestras el error se estabiliza
nodesizes.1 <- list(50)
sampsizes.1 <- list(1, 2500)
bagging_modelo1_3 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
nodesizes.1 <- list(100)
sampsizes.1 <- list(1, 1500, 3000)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1", ],
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+1500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "100+3000", ]
)
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo1_100rep.png")
#-- Distribucion del AUC
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_100rep.png")
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo1_5rep.png")
#-- Distribucion del AUC
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_5rep.png")
ggplot(bagging_modelo2, aes(x=factor(sampsizes), y=tasa,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
#-- Distribucion del AUC
#
ggplot(bagging_modelo2, aes(x=factor(sampsizes), y=auc,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
nodesizes.2 <- list(20)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
nodesizes.2 <- list(30)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
nodesizes.2 <- list(50)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
ggplot(bagging_modelo2, aes(x=factor(sampsizes), y=tasa,
colour=factor(nodesizes))) +
geom_point(position=position_dodge(width=0.3),size=3, shape = 18)
#- Mejor opcion: 20 + 1000
nodesizes.2 <- list(20)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
#- Mejor opcion: 30 + 2000
nodesizes.2 <- list(30)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_3 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
#- Mejora opcion: 50 + 2000-2500-3000
nodesizes.2 <- list(50)
sampsizes.2 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo2_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 5)
union_bagging_modelo2 <- rbind(
bagging_modelo1_2[bagging_modelo2_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo2_3$modelo == "30+2000", ],
bagging_modelo1_4[bagging_modelo2_4$modelo == "50+1", ],
bagging_modelo1_4[bagging_modelo2_4$modelo == "50+2000", ],
bagging_modelo1_4[bagging_modelo2_4$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo2_4$modelo == "50+3000", ]
)
union_bagging_modelo2 <- rbind(
bagging_modelo2_2[bagging_modelo2_2$modelo == "20+1000", ],
bagging_modelo2_3[bagging_modelo2_3$modelo == "30+2000", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+1", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+2000", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+2500", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+3000", ]
)
View(union_bagging_modelo2)
ggplot(union_bagging_modelo2, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo2, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo2_5rep.png")
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo2, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo2_5rep.png")
#-- Distribucion del AUC
ggplot(union_bagging_modelo2, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo2_5rep.png")
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
#- Mejor opcion: 20 + 1000
nodesizes.2 <- list(20)
sampsizes.2 <- list(1000)
bagging_modelo2_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 10)
#- Mejor opcion: 30 + 2000
nodesizes.2 <- list(30)
sampsizes.2 <- list(2000)
bagging_modelo2_3 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 10)
#- Mejora opcion: 50 + 2000-2500-3000
nodesizes.2 <- list(50)
sampsizes.2 <- list(1, 2000, 2500, 3000)
bagging_modelo2_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo2,
nodesizes = nodesizes.2,
sampsizes = sampsizes.2, mtry = mtry.2,
ntree = n.trees, grupos = 5, repe = 10)
union_bagging_modelo2 <- rbind(
bagging_modelo2_2[bagging_modelo2_2$modelo == "20+1000", ],
bagging_modelo2_3[bagging_modelo2_3$modelo == "30+2000", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+1", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+2000", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+2500", ],
bagging_modelo2_4[bagging_modelo2_4$modelo == "50+3000", ]
)
ggplot(union_bagging_modelo2, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo2, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggplot(union_bagging_modelo2, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo2_10rep.png")
#-- Distribucion del AUC
ggplot(union_bagging_modelo2, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo2_10rep.png")
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
nodesizes.1 <- list(30)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "30+1000", ]
)
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo1_5rep.png")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_5rep.png")
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
nodesizes.1 <- list(20)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
# A partir de 2500 submuestras el error se estabiliza
nodesizes.1 <- list(50)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_3 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
nodesizes.1 <- list(30)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 10)
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "30+2000", ]
)
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo1_10rep.png")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_10rep.png")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_10rep.png")
load("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "30+2000", ]
)
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
nodesizes.1 <- list(20)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_2 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
# A partir de 2500 submuestras el error se estabiliza
nodesizes.1 <- list(50)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_3 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
nodesizes.1 <- list(30)
sampsizes.1 <- list(1, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4600)
bagging_modelo1_4 <- tuneo_bagging(surgical_dataset, target = target,
lista.continua = var_modelo1,
nodesizes = nodesizes.1,
sampsizes = sampsizes.1, mtry = mtry.1,
ntree = n.trees, grupos = 5, repe = 5)
union_bagging_modelo1 <- rbind(
bagging_modelo1_2[bagging_modelo1_2$modelo == "20+1000", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+1", ],
bagging_modelo1_3[bagging_modelo1_3$modelo == "50+2500", ],
bagging_modelo1_4[bagging_modelo1_4$modelo == "30+2000", ]
)
#-- Distribucion de la tasa de error
ggplot(union_bagging_modelo1, aes(x = modelo, y = tasa)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("Tasa de fallos por modelo")
ggsave("./charts/bagging/03_comparacion_final_tasa_modelo1_5rep.png")
ggplot(union_bagging_modelo1, aes(x = modelo, y = auc)) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552",
alpha = 0.7) +
scale_x_discrete(name = "Modelo") +
ggtitle("AUC por modelo")
ggsave("./charts/bagging/03_comparacion_final_auc_modelo1_10rep.png")
save.image("~/UCM/Machine Learning/Practica ML/MachineLearning/rdata/Bagging.RData")
