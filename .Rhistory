setwd("E:/UCM/MachineLearning")
library(corrplot)
library(readxl)
library(ggplot2)
telco.data <- read.csv("teleco.csv")
View(telco.data)
length(unique(telco.data$customerID))
telco.data <- telco.data[, !colnames(telco.data) %in% c("customerID")]
library(DataExplorer)
create_report(telco.data)
library(corrplot)
library(readxl)
library(ggplot2)
library(DataExplorer)
library(digest)
library(DataExplorer)
dim(telco.data) # 6367 filas y 13 columnas
dput(names(telco.data))
dim(telco.data) # 6367 filas y 12 columnas
summary(telco.data)
apply(telco.data, 2, function(x) {length(unique(x))})
telco.data[,c(1:17,20)] <- lapply(telco.data[, c(1:17,20)], factor)
summary(telco.data[, c(1:17,20)])
target<-"Churn"
names(Filter(is.factor, telco.data))
factores<-names(Filter(is.factor, telco.data))[18]
numericas<-names(Filter(is.numeric, telco.data))
mosaico_targetbinaria<-function(var,target,nombreEje){
ds <- table(var, target)
ord <- order(apply(ds, 1, sum), decreasing=TRUE)
mosaicplot(ds[ord,], color=c("darkturquoise","indianred1"), las=2, main="",xlab=nombreEje)
}
for(columna in factores) {
mosaico_targetbinaria(telco.data[, columna], telco.data[, "Churn"],columna)
}
factores<-names(Filter(is.factor, telco.data))[-18]
mosaico_targetbinaria<-function(var,target,nombreEje){
ds <- table(var, target)
ord <- order(apply(ds, 1, sum), decreasing=TRUE)
mosaicplot(ds[ord,], color=c("darkturquoise","indianred1"), las=2, main="",xlab=nombreEje)
}
for(columna in factores) {
mosaico_targetbinaria(telco.data[, columna], telco.data[, "Churn"],columna)
}
library(scorecard)
salida.woe <- woebin(telco.data, y = "choice", print_step = 0, positive = "choice1")
salida.woe <- woebin(telco.data, y = "Churn", print_step = 0)
salida.woe <- woebin(telco.data, y = "Churn", print_step = 0, positive = "Yes")
salida.woe
grafico_barras_cuantitativa <- function(columna) {
ggplot(telco.data, aes_string(x = columna)) + geom_histogram(aes(color = death, fill = death),
alpha = 0.4, position = "identity") +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
scale_color_manual(values = c("#00AFBB", "#E7B800"))
}
for(columna in numericas) {
print(grafico_barras_cuantitativa(columna))
}
grafico_barras_cuantitativa <- function(columna) {
ggplot(telco.data, aes_string(x = columna)) + geom_histogram(aes(color = Churn, fill = Churn),
alpha = 0.4, position = "identity") +
scale_fill_manual(values = c("#00AFBB", "#E7B800")) +
scale_color_manual(values = c("#00AFBB", "#E7B800"))
}
for(columna in numericas) {
print(grafico_barras_cuantitativa(columna))
}
digest::
require(digest)
for(columna in numericas) {
print(grafico_barras_cuantitativa(columna))
}
install.packages('digest', repos='http://cran.us.r-project.org')
library(digest)
for(columna in numericas) {
print(grafico_barras_cuantitativa(columna))
}
library(naniar)
gg_miss_var(telco.data)
summary(telco.data)
psych::describe(Filter(is.numeric, telco.data))
tablamis.numericas<-as.data.frame(sapply(telco.data[,numericas],function(x) sum(is.na(x))))
names(tablamis.numericas)[1]<-"nmiss"
max(tablamis.numericas)/nrow(telco.data) # 0 % (en el peor de los casos)
tablamis.factores<-as.data.frame(sapply(telco.data[,factores],function(x) sum(is.na(x))))
names(tablamis.factores)[1]<-"nmiss"
max(tablamis.factores)/ nrow(telco.data) # Existen variables que llegan al 72 % (en el peor de los casos)
telco.data$prop_missings<-apply(telco.data,1,function(x) sum(is.na(x)) / length(colnames(telco.data)))
summary(telco.data$prop_missings)
sum(boxplot(telco.data$prop_missings, plot = FALSE)$out > 0.1) # 1143 observaciones con mas del 10 % de sus variables a missing
View(salida.woe)
View(tablamis.factores)
View(telco.data)
telco.data$prop_missings <- NULL
psych::describe(Filter(is.numeric, telco.data))
library(DataExplorer)
create_report(telco.data)
